	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_equalize
_equalize:
	ld	hl, -3
	call	__frameset
	ld	iy, 0
	ld	bc, (_offset)
	ld	de, 0
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_2
	ld	(_offset), iy
	lea	bc, iy + 0
BB0_2:
	ld	(ix + -3), bc
	ld	bc, (_cur)
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	push	bc
	pop	de
	jq	p, BB0_4
	lea	de, iy + 0
BB0_4:
	ld	iy, _buffer
BB0_5:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_6
	inc	bc
	ld	(_cur), bc
	ld	hl, (ix + -3)
	push	hl
	pop	iy
	dec	iy
	dec	hl
	ld	(_offset), hl
	ld	(ix + -3), iy
	ld	iy, _buffer
	jq	BB0_5
BB0_6:
	ld	bc, 41
BB0_8:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB0_10
	push	de
	pop	hl
	dec	hl
	dec	de
	ld	(_cur), de
	ld	bc, (ix + -3)
	push	bc
	pop	de
	inc	de
	inc	bc
	ld	(_offset), bc
	ld	(ix + -3), de
	ex	de, hl
	ld	bc, 41
	jq	BB0_8
BB0_10:
	push	iy
	call	_strlen
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 0
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	lea	hl, iy + 0
	ld	bc, 41
	or	a, a
	sbc	hl, bc
	jq	c, BB0_13
	ld	bc, 40
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nc, BB0_13
	ld	de, -40
	add	iy, de
	ld	(_offset), iy
	ld	hl, 40
	ld	(_cur), hl
BB0_13:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_addchar
_addchar:
	call	__frameset0
	ld	hl, _buffer
	push	hl
	call	_strlen
	push	hl
	pop	bc
	pop	hl
	ld	de, 1024
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_7
	ld	a, (ix + 6)
	ld	de, (_ind)
BB1_2:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB1_4
	ld	iy, _buffer
	add	iy, bc
	dec	bc
	ld	l, (iy + -1)
	ld	(iy), l
	jq	BB1_2
BB1_4:
	push	de
	pop	hl
	ld	bc, 1024
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB1_6
	ld	hl, _buffer
	add	hl, de
	inc	de
	ld	(_ind), de
	ld	(hl), a
BB1_6:
	ld	hl, (_cur)
	inc	hl
	ld	(_cur), hl
	call	_equalize
BB1_7:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_bs
_bs:
	ld	de, (_ind)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_4
	ld	iy, _buffer
	push	de
	pop	bc
	dec	bc
	lea	hl, iy + 0
	add	hl, bc
	ld	(hl), 0
	ld	(_ind), bc
	add	iy, de
	ld	e, (iy)
BB2_2:
	push	hl
	pop	iy
	ld	(iy), e
	ld	e, (iy + 2)
	inc	hl
	ld	a, e
	or	a, a
	jq	nz, BB2_2
	ld	(iy + 1), 0
	ld	hl, (_cur)
	dec	hl
	ld	(_cur), hl
	call	_equalize
BB2_4:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_addstr
_addstr:
	ld	hl, -3
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix + -3), hl
BB3_1:
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	nc, BB3_2
	ld	hl, (ix + 6)
	ld	de, (ix + -3)
	add	hl, de
	ld	a, (hl)
	ld	l, a
	push	hl
	call	_addchar
	pop	hl
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	jq	BB3_1
BB3_2:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_shell
_draw_shell:
	ld	hl, -1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 320
	push	hl
	ld	hl, 210
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -46
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, (_offset)
	ld	hl, _buffer
	add	hl, de
	push	hl
	call	_fontlib_DrawString
	pop	hl
	ld	hl, (_cur)
	ld	c, 3
	call	__ishl
	ld	de, 14
	push	de
	ld	de, 210
	push	de
	push	hl
	call	_gfx_VertLine
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 43
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 320
	push	hl
	ld	hl, 225
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 43
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, 225
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 15
	push	hl
	ld	de, 64
	push	de
	ld	hl, 225
	push	hl
	push	de
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, 225
	push	hl
	ld	hl, 128
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, 225
	push	hl
	ld	hl, 192
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, 225
	push	hl
	ld	hl, 256
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -1
	push	hl
	call	_fontlib_SetForegroundColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 2
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	ld	hl, L_.str.63
	push	hl
	call	_fontlib_DrawString
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 2
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	ld	a, (_mode)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _mods
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_fontlib_DrawString
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_fontlib_SetForegroundColor
	pop	hl
	ld	hl, -31
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	ld	a, (_mode)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _func_strings
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_fontlib_DrawString
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_mesh_mainloop
_mesh_mainloop:
	ld	hl, -3
	call	__frameset
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB5_1:
	call	_draw_shell
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ld.sis	bc, 0
BB5_2:
	ld	a, c
	or	a, a
	jq	nz, BB5_4
	call	_os_GetCSC
	ld	c, a
	ld	b, 0
	jq	BB5_2
BB5_4:
	ld	a, c
	sub	a, 1
	ld	de, 0
	cp	a, 10
	jq	c, BB5_6
	ld	a, c
	cp	a, 48
	jq	nz, BB5_7
	ld	a, (_mode)
	cp	a, 3
	ld	l, 0
	jq	z, BB5_14
	ld	l, 2
BB5_14:
	cp	a, 2
	ld	a, 3
	jq	z, BB5_16
	ld	a, l
BB5_16:
	ld	(_mode), a
	jq	BB5_1
BB5_6:
	ld	e, a
	ld	hl, LJTI5_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB5_17:
	ld	hl, _buffer
	push	hl
	call	_strlen
	push	hl
	pop	iy
	pop	hl
	ld	(_ind), iy
	lea	hl, iy + 0
	ld	de, 39
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB5_19
	ld	(_cur), iy
	ld	iy, 0
	jq	BB5_20
BB5_7:
	ld	a, c
	cp	a, 54
	jq	nz, BB5_8
	ld	a, (_mode)
	cp	a, 1
	ld	a, 1
	jq	nz, BB5_11
	ld	a, 0
BB5_11:
	and	a, 1
	ld	(_mode), a
	jq	BB5_1
BB5_8:
	ld	a, c
	cp	a, 56
	jq	nz, BB5_29
	call	_bs
	jq	BB5_1
BB5_29:
	ld	de, 0
	ld	e, c
	ld	d, b
	dec	de
	ld	a, (_mode)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	(ix + -3), hl
	ex	de, hl
	ld	bc, 12
	call	__imulu
	push	hl
	pop	de
	ld	iy, _key_strings
	add	iy, de
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	push	hl
	call	_addstr
	pop	hl
	jq	BB5_1
BB5_21:
	ld	hl, (_ind)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_23
	ld	de, (_cur)
	dec	de
	ld	(_cur), de
	dec	hl
	ld	(_ind), hl
BB5_23:
	call	_equalize
	jq	BB5_1
BB5_24:
	ld	hl, (_ind)
	ld	(ix + -3), hl
	ld	hl, _buffer
	push	hl
	call	_strlen
	ld	bc, (ix + -3)
	push	hl
	pop	de
	pop	hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	nc, BB5_26
	ld	hl, (_cur)
	inc	hl
	ld	(_cur), hl
	inc	bc
	ld	(_ind), bc
BB5_26:
	call	_equalize
	jq	BB5_1
BB5_27:
	or	a, a
	sbc	hl, hl
	ld	(_ind), hl
	ld	(_cur), hl
	ld	(_offset), hl
	call	_equalize
	jq	BB5_1
BB5_19:
	ld	hl, 40
	ld	(_cur), hl
	ld	de, -40
	add	iy, de
BB5_20:
	ld	(_offset), iy
	call	_equalize
	jq	BB5_1
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI5_0:
	private	LJTI5_0
LJTI5_0:
	dl	BB5_17
	dl	BB5_21
	dl	BB5_24
	dl	BB5_27
	dl	BB5_29
	dl	BB5_29
	dl	BB5_29
	dl	BB5_29
	dl	BB5_1
	dl	BB5_1

	section	.text,"ax",@progbits
	public	_eval
_eval:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	push	hl
	call	_malloc
	ld	(ix + -3), hl
	pop	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, L_.str.64
	ld	de, 3
	push	de
	push	hl
	call	_fontlib_GetFontByIndex
	pop	de
	pop	de
	ld	(_font_small), hl
	ld	de, 0
	push	de
	push	hl
	call	_fontlib_SetFont
	pop	hl
	pop	hl
	ld	hl, -1
	push	hl
	call	_fontlib_SetForegroundColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_fontlib_SetTransparency
	pop	hl
	ld	hl, 1
	push	hl
	call	_fontlib_SetBackgroundColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetTextTransparentColor
	pop	hl
	call	_gfx_Begin
	ld	hl, -1
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.65
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_mesh_mainloop
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"      ",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"2nd   ",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"ALPHA ",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"alpha ",000o

	section	.data,"aw",@progbits
	public	_mods
_mods:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2
	dl	L_.str.3

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"   y=    Window   Zoom   trace   graph",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"   F1      F2      F3      F4      F5 ",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"   ??      ??      ??      ??      ?? ",000o

	section	.data,"aw",@progbits
	public	_func_strings
_func_strings:
	dl	L_.str.4
	dl	L_.str.5
	dl	L_.str.6
	dl	L_.str.6

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"<DOWN>",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"<LEFT>",000o

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"<RIGHT>",000o

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"<UP>",000o

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"<ERR5>",000o

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"<ERR6>",000o

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"<ERR7>",000o

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"<ERR8>",000o

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"",012o,000o

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"+",000o

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"-",000o

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"*",000o

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"/",000o

	section	.rodata,"a",@progbits
	private	L_.str.20
L_.str.20:
	db	"^",000o

	section	.rodata,"a",@progbits
	private	L_.str.21
L_.str.21:
	db	"<CLEAR>",000o

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"<ERR16>",000o

	section	.rodata,"a",@progbits
	private	L_.str.23
L_.str.23:
	db	"~",000o

	section	.rodata,"a",@progbits
	private	L_.str.24
L_.str.24:
	db	"3",000o

	section	.rodata,"a",@progbits
	private	L_.str.25
L_.str.25:
	db	"6",000o

	section	.rodata,"a",@progbits
	private	L_.str.26
L_.str.26:
	db	"9",000o

	section	.rodata,"a",@progbits
	private	L_.str.27
L_.str.27:
	db	")",000o

	section	.rodata,"a",@progbits
	private	L_.str.28
L_.str.28:
	db	"tan(",000o

	section	.rodata,"a",@progbits
	private	L_.str.29
L_.str.29:
	db	"<VARS>",000o

	section	.rodata,"a",@progbits
	private	L_.str.30
L_.str.30:
	db	"<ERR24>",000o

	section	.rodata,"a",@progbits
	private	L_.str.31
L_.str.31:
	db	".",000o

	section	.rodata,"a",@progbits
	private	L_.str.32
L_.str.32:
	db	"2",000o

	section	.rodata,"a",@progbits
	private	L_.str.33
L_.str.33:
	db	"5",000o

	section	.rodata,"a",@progbits
	private	L_.str.34
L_.str.34:
	db	"8",000o

	section	.rodata,"a",@progbits
	private	L_.str.35
L_.str.35:
	db	"(",000o

	section	.rodata,"a",@progbits
	private	L_.str.36
L_.str.36:
	db	"<cos(>",000o

	section	.rodata,"a",@progbits
	private	L_.str.37
L_.str.37:
	db	"<PRGM>",000o

	section	.rodata,"a",@progbits
	private	L_.str.38
L_.str.38:
	db	"<STAT>",000o

	section	.rodata,"a",@progbits
	private	L_.str.39
L_.str.39:
	db	"0",000o

	section	.rodata,"a",@progbits
	private	L_.str.40
L_.str.40:
	db	"1",000o

	section	.rodata,"a",@progbits
	private	L_.str.41
L_.str.41:
	db	"4",000o

	section	.rodata,"a",@progbits
	private	L_.str.42
L_.str.42:
	db	"7",000o

	section	.rodata,"a",@progbits
	private	L_.str.43
L_.str.43:
	db	",",000o

	section	.rodata,"a",@progbits
	private	L_.str.44
L_.str.44:
	db	"sin(",000o

	section	.rodata,"a",@progbits
	private	L_.str.45
L_.str.45:
	db	"<APPS>",000o

	section	.rodata,"a",@progbits
	private	L_.str.46
L_.str.46:
	db	"X",000o

	section	.rodata,"a",@progbits
	private	L_.str.47
L_.str.47:
	db	"<ON>",000o

	section	.rodata,"a",@progbits
	private	L_.str.48
L_.str.48:
	db	"->",000o

	section	.rodata,"a",@progbits
	private	L_.str.49
L_.str.49:
	db	"ln(",000o

	section	.rodata,"a",@progbits
	private	L_.str.50
L_.str.50:
	db	"log(",000o

	section	.rodata,"a",@progbits
	private	L_.str.51
L_.str.51:
	db	"^2",000o

	section	.rodata,"a",@progbits
	private	L_.str.52
L_.str.52:
	db	"^~1",000o

	section	.rodata,"a",@progbits
	private	L_.str.53
L_.str.53:
	db	"<MATH>",000o

	section	.rodata,"a",@progbits
	private	L_.str.54
L_.str.54:
	db	"<ALPHA>",000o

	section	.rodata,"a",@progbits
	private	L_.str.55
L_.str.55:
	db	"<GRAPH>",000o

	section	.rodata,"a",@progbits
	private	L_.str.56
L_.str.56:
	db	"<TRACE>",000o

	section	.rodata,"a",@progbits
	private	L_.str.57
L_.str.57:
	db	"<ZOOM>",000o

	section	.rodata,"a",@progbits
	private	L_.str.58
L_.str.58:
	db	"<WINDOW>",000o

	section	.rodata,"a",@progbits
	private	L_.str.59
L_.str.59:
	db	"<Y=>",000o

	section	.rodata,"a",@progbits
	private	L_.str.60
L_.str.60:
	db	"<SECOND>",000o

	section	.rodata,"a",@progbits
	private	L_.str.61
L_.str.61:
	db	"<MODE>",000o

	section	.rodata,"a",@progbits
	private	L_.str.62
L_.str.62:
	db	"<DEL>",000o

	section	.data,"aw",@progbits
	public	_key_strings
_key_strings:
	dl	L_.str.7
	dl	0
	dl	0
	dl	0
	dl	L_.str.8
	dl	0
	dl	0
	dl	0
	dl	L_.str.9
	dl	0
	dl	0
	dl	0
	dl	L_.str.10
	dl	0
	dl	0
	dl	0
	dl	L_.str.11
	dl	0
	dl	0
	dl	0
	dl	L_.str.12
	dl	0
	dl	0
	dl	0
	dl	L_.str.13
	dl	0
	dl	0
	dl	0
	dl	L_.str.14
	dl	0
	dl	0
	dl	0
	dl	L_.str.15
	dl	0
	dl	0
	dl	0
	dl	L_.str.16
	dl	0
	dl	0
	dl	0
	dl	L_.str.17
	dl	0
	dl	0
	dl	0
	dl	L_.str.18
	dl	0
	dl	0
	dl	0
	dl	L_.str.19
	dl	0
	dl	0
	dl	0
	dl	L_.str.20
	dl	0
	dl	0
	dl	0
	dl	L_.str.21
	dl	0
	dl	0
	dl	0
	dl	L_.str.22
	dl	0
	dl	0
	dl	0
	dl	L_.str.23
	dl	0
	dl	0
	dl	0
	dl	L_.str.24
	dl	0
	dl	0
	dl	0
	dl	L_.str.25
	dl	0
	dl	0
	dl	0
	dl	L_.str.26
	dl	0
	dl	0
	dl	0
	dl	L_.str.27
	dl	0
	dl	0
	dl	0
	dl	L_.str.28
	dl	0
	dl	0
	dl	0
	dl	L_.str.29
	dl	0
	dl	0
	dl	0
	dl	L_.str.30
	dl	0
	dl	0
	dl	0
	dl	L_.str.31
	dl	0
	dl	0
	dl	0
	dl	L_.str.32
	dl	0
	dl	0
	dl	0
	dl	L_.str.33
	dl	0
	dl	0
	dl	0
	dl	L_.str.34
	dl	0
	dl	0
	dl	0
	dl	L_.str.35
	dl	0
	dl	0
	dl	0
	dl	L_.str.36
	dl	0
	dl	0
	dl	0
	dl	L_.str.37
	dl	0
	dl	0
	dl	0
	dl	L_.str.38
	dl	0
	dl	0
	dl	0
	dl	L_.str.39
	dl	0
	dl	0
	dl	0
	dl	L_.str.40
	dl	0
	dl	0
	dl	0
	dl	L_.str.41
	dl	0
	dl	0
	dl	0
	dl	L_.str.42
	dl	0
	dl	0
	dl	0
	dl	L_.str.43
	dl	0
	dl	0
	dl	0
	dl	L_.str.44
	dl	0
	dl	0
	dl	0
	dl	L_.str.45
	dl	0
	dl	0
	dl	0
	dl	L_.str.46
	dl	0
	dl	0
	dl	0
	dl	L_.str.47
	dl	0
	dl	0
	dl	0
	dl	L_.str.48
	dl	0
	dl	0
	dl	0
	dl	L_.str.49
	dl	0
	dl	0
	dl	0
	dl	L_.str.50
	dl	0
	dl	0
	dl	0
	dl	L_.str.51
	dl	0
	dl	0
	dl	0
	dl	L_.str.52
	dl	0
	dl	0
	dl	0
	dl	L_.str.53
	dl	0
	dl	0
	dl	0
	dl	L_.str.54
	dl	0
	dl	0
	dl	0
	dl	L_.str.55
	dl	0
	dl	0
	dl	0
	dl	L_.str.56
	dl	0
	dl	0
	dl	0
	dl	L_.str.57
	dl	0
	dl	0
	dl	0
	dl	L_.str.58
	dl	0
	dl	0
	dl	0
	dl	L_.str.59
	dl	0
	dl	0
	dl	0
	dl	L_.str.60
	dl	0
	dl	0
	dl	0
	dl	L_.str.61
	dl	0
	dl	0
	dl	0
	dl	L_.str.62
	dl	0
	dl	0
	dl	0

	section	.bss,"aw",@nobits
	public	_offset
_offset:
	rb	3

	section	.bss,"aw",@nobits
	public	_cur
_cur:
	rb	3

	section	.bss,"aw",@nobits
	public	_buffer
_buffer:
	rb	1024

	section	.bss,"aw",@nobits
	public	_ind
_ind:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str.63
L_.str.63:
	db	"MESH V0.00",000o

	section	.bss,"aw",@nobits
	public	_mode
_mode:
	rb	1

	section	.rodata,"a",@progbits
	private	L_.str.64
L_.str.64:
	db	"DrMono",000o

	section	.bss,"aw",@nobits
	public	_font_small
_font_small:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str.65
L_.str.65:
	db	"Loading...",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_gfx_SetTextTransparentColor
	extern	__Unwind_SjLj_Register
	extern	_fontlib_SetTransparency
	extern	_fontlib_GetFontByIndex
	extern	_malloc
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_gfx_PrintString
	extern	__ishl
	extern	_strlen
	extern	__setflag
	extern	_gfx_Blit
	extern	_gfx_FillRectangle
	extern	_fontlib_SetCursorPosition
	extern	_os_GetCSC
	extern	__frameset
	extern	_fontlib_SetBackgroundColor
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTransparentColor
	extern	_fontlib_DrawString
	extern	_fontlib_SetForegroundColor
	extern	_fontlib_SetFont
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	_gfx_VertLine
	extern	__Unwind_SjLj_Unregister
	extern	_strcpy
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_Rectangle
	extern	__frameset0
	extern	_gfx_SetTextXY
